#ifndef __OSS_H__
#define __OSS_H__

typedef struct{
	unsigned char riff[4];		/* 资源交换文件标志（"RIFF"），表明这是一个WAVE文件头 */
	unsigned int file_length;	/* 从下个地址到文件尾的总字节数(即音频文件的总字节数-8) */
	unsigned char wav_flag[4];	/* WAV文件标志（"WAVE"） */
	unsigned char fmt_flag[4];	/* 波形格式标志（"fmt "），注意：fmt后的空格不能少 */
	unsigned int transition;	/* 过渡字节（固定为0x10） */
	unsigned short format_tag;	/* 声音数据的编码方式（0x01为PCM形式的声音数据) */
	unsigned short channels;	/* 通道数，单声道为1，双声音为2 */
	unsigned int sample_rate;	/* 采样率 */
	unsigned int wave_rate;		/* 波形数据每秒数据字节数(采样率*通道数*采样位数/8) */
	unsigned short block_align;	/* 数据块的调整数(通道数*采样位数/8) */
	unsigned short sample_bits;	/* 采样位数 */
	unsigned char data_flag[4];	/* 数据区标志（"data"），标示wave头结束，数据区域的开始 */
	unsigned int data_length;	/* 采样数据总数 */
}wav_header;

/*********************************************************************
*功能:		打开音频设备文件
*参数:		音频设备文件名
*返回值:	音频设备描述符
*********************************************************************/
int oss_open_device(char *devname);

/*********************************************************************
*功能:		关闭音频设备文件
*参数:		音频设备文件描述符
*返回值:	
			成功：0
			失败：-1
*********************************************************************/
int oss_close_device(int oss_fd);

/*********************************************************************
*功能:		设置采样率
*参数:		
			dsp_fd：音频设备文件描述符
			sample_rate：采样率
*返回值:	
			成功：0
			失败：-1
*********************************************************************/
int oss_set_sample_rate(int dsp_fd, long sample_rate);

/*********************************************************************
*功能:		设置采样位数
*参数:		
			dsp_fd：音频设备文件描述符
			sample_bits：采样位数
*返回值:	
			成功：0
			失败：-1
*********************************************************************/
int oss_set_sample_bits(int dsp_fd, unsigned int sample_bits);

/*********************************************************************
*功能:		设置声道数
*参数:		
			dsp_fd：音频设备文件描述符
			channels：声道数
*返回值:	
			成功：0
			失败：-1
*********************************************************************/
int oss_set_channels(int dsp_fd, int channels);

/*********************************************************************
*功能:		设置混音器的音量(放音)
*参数:		
			mixer_fd：混音器或音频设备文件描述符
			val_left：左声道声音
			val_right：右声道声音
*返回值:	
			成功：0
			失败：-1
*注意：必需在设置完采样率、量化位数、声道数后才能设置声音，否则设置声音音量无效 
*********************************************************************/
int oss_set_mixer_volume(int mixer_fd, int val_left, int val_right);

/*********************************************************************
*功能:		获取混音器的音量(放音)
*参数:		
			mixer_fd：混音器或音频设备文件描述符
			val_left：存储左声道声音的变量的地址
			val_right：存储右声道声音的变量的地址
*返回值:	
			成功：0
			失败：-1
*********************************************************************/
int oss_get_mixer_volume(int mixer_fd, int *val_left, int *val_right);

#endif
